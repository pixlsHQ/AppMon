require 'rubygems'

require 'nokogiri'
require 'open-uri'
require 'table_parser'
require 'plist'
require 'fileutils'

require 'lib/app_store/lib/app_store'

task :country do |t|
  include FileUtils
  html = open("http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2").read
  doc = Nokogiri::HTML(html)
  table = TableParser::Table.new doc, "/html/body/div[3]/div[3]/table[3]"

  countries = {}
  table[0].children.each_index do |idx|
    code = table[0][idx].text.downcase
    name = table[1][idx].text  
    countries[name] = code
  end

  # manual override
  countries["대한민국"] = "kr"
  countries["日本"] = "jp"    
  countries["België/Belgique"] = "be"
  countries["México"] = "mx"
  countries["Panamá"] = "pa"
  countries["Perú"] = "pe"
  countries["Schweiz/Suisse"] = "ch"
  countries["Venezuela"] = "ve"
  countries["España"] = "es"
  countries["Russia"] = "ru"
  countries["Republic of Moldova"] = 'md'
  countries["Vietnam"] = "vn"
  countries["Nederland"] = "nl"
  countries["Macedonia"] = "mk"
  countries["Macau"] = "mo"
  countries["Deutschland"] = "de"
  countries["Italia"] = "it"
  countries["台湾"] = "tw"
  countries["Republic of Malta"] = "mt"
  countries["Österreich"] = "at"

  countries["Moldova"] = "md"
  countries["Eesti"] = "ee"
  countries["Россия"] = "ru"
  countries["Magyarország"] = "hu"
  countries["Polska"] = "pl"
  countries["Tanzania"] = "tz"
  countries["República Dominicana"] = "do"
  countries["Hrvatska"] = "hr"
  countries["Hong Kong/香港"] = "hk"
  countries["Tunisie"] = "tn"
  countries["St. Lucia"] = "lc"
  countries["St. Vincent & The Grenadines"] = "vc"
  countries["Bolivia"] = "bo"
  countries["Latvija"] = "lv"
  countries["Turks & Caicos"] = "tc"
  countries["Sverige"] = "se"
  countries["中国"] = "cn"
  countries["България"] = "bg"
  countries["St. Kitts & Nevis"] = "kn"
  countries["British Virgin Islands"] = "vg"
  countries["Česká republika"] = "cz"
  countries["Lietuva"] = "lt"
  countries["UK"] = "uk"
  countries["Norge"] = "no"
  countries["Sénégal"] = "sn"
  countries["Türkiye"] = "tr"
  countries["Suomi"] = "fi"
  
  # find app store country
  output = {}
  stores = AppStore.stores
  stores.each_key do |name|
    unless countries[name]
      puts "store image not found #{name}"
    else
      output[name] = {:image => countries[name], :id => stores[name]}
    end
  end
  
  File.open("country.plist", "w") do |f|
    f.write(Plist::Emit.dump(output, true))
  end
end
